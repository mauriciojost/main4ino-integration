#!/usr/bin/env bash

set -e
set -u
#set -x

source highlight.sh

function kill_server() {
  info "Killing server..."
  set +e
  jps -l | grep sbt-launch.jar | cut -d' ' -f 1 | xargs -I% kill -9 %
  set -e
  sleep 1
}

function kill_device() {
  info "Killing device..."
  set +e
  killall -9 .mavarduino.simulator.bin
  set -e
  sleep 1
}


function usage() {
    error "integrate [ -e command_expect_file ]"
    exit 1
}

function wait_for_logs() {
  local expr="$1"
  local logs="$2"
  while [ $(egrep "$expr" "$logs" | wc -l) == "0" ] ; do
    debug "Waiting for $logs to match: $expr ..."
    sleep 1 
  done
  info "Matched in $logs: $expr ..."
}
function server_wait_for_logs() {
  wait_for_logs "$1" "$mss"
}
function device_wait_for_logs() {
  wait_for_logs "$1" "$slo"
}

function device_assert_logs() {
  if [ $(egrep "$1" "$slo" | wc -l) == "0" ]
  then
    echo "false"
  else
    echo "true"
  fi
}
function device_clear_logs() {
  echo "" > $slo
}

function device_send_command() {
  local cmnd="$1"
  info "Sending command '$cmnd'..."
  echo "$cmnd" > $cmd_file.tmp
  mv $cmd_file.tmp  $cmd_file
}

devmode="false"
while getopts "e:d" OPT; do
    case "$OPT" in
        e) command_expect_file="$(readlink -e ${OPTARG})";;
        d) devmode="true";;
        *) usage; exit 1;;
    esac
done


root_dir=$(readlink -e $(dirname $0))
config_dir=$root_dir/config
m4is=$root_dir/main4ino-server
msu=$root_dir/msu.log
mss=$root_dir/mss.log
slo=$root_dir/slo.log
cmd_file=/tmp/commands.list

cd $root_dir

if [ "$devmode" == "true" ]
then
  logstep "DEV mode (reusing server)..."
  kill_device
else
  kill_server
  kill_device

  if [ ! -d $config_dir ]
  then
    logstep "Generating server configuration at: $config_dir..."
    mkdir -p $config_dir
    bash $m4is/misc/scripts/configgen/update 1>&2 | tee $msh 
    cp -f $m4is/misc/scripts/configgen/security.conf $config_dir
    cp -f $m4is/src/main/resources/defaultconfig/* $config_dir
  else
    logstep "Reusing server configuration at: $config_dir (remove directory to regenerate)"
  fi

  logstep "Launch server (logs in $mss)..."
  cd $m4is
  rm -f dbh2.mv.db
  sbt -Dconfig-dir=$config_dir 'runMain org.mauritania.main4ino.Server' &> $mss &
fi

cd $root_dir/arduino-project
if [ ! -e $config_dir/simulate.prof ]
then
  logstep "Pull arduino-project dependencies..."
  ./.mavarduino/create_links
  ./pull_dependencies -p -l
  logstep "Generate arduino-project configuration..."
  cat profiles/simulate.prof | grep -v MAIN4INOSERVER_API_HOST_BASE | grep -v  SIMULATOR_ > $config_dir/simulate.prof 
  echo '-D MAIN4INOSERVER_API_HOST_BASE="http://localhost:8080"' >> $config_dir/simulate.prof
  echo '-D SIMULATOR_LOGIN="admin"' >> $config_dir/simulate.prof
  echo '-D SIMULATOR_PASS="password"' >> $config_dir/simulate.prof
else
  logstep "Reusing arduino-project dependencies and configuration (remove $config_dir/simulate.prof to regenerate)..."
fi

server_wait_for_logs ".*started at http:.*"

logstep "Simulating (logs in $slo)..."
./simulate -p $config_dir/simulate.prof -a "0 1000" &> $slo &

info "Waiting for simulator to get stable..."
sleep 10


#device_wait_for_logs ".*.tmp.commands.list.*"

logstep "Executing commands and asserts..."

while IFS= read -r line
do
  cmnd=$(echo "$line" | awk -F^ '{print $1}')
  expt=$(echo "$line" | awk -F^ '{print $2}')
  device_send_command "$cmnd"

  sleep 2

  device_wait_for_logs "^###COMMAND: $cmnd$"

  if [ $(device_assert_logs "$expt") == "true" ]
  then
    info "Matched $cmnd / $expt..."
  else
    error "Did not match $cmnd / $expt..."
    error "Content (begin):"
    cat $slo
    error "Content (end)"
  fi
  device_clear_logs
done < $command_expect_file

logstep 'Done.'

